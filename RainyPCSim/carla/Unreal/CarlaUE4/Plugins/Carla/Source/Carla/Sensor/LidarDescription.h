// Copyright (c) 2017 Computer Vision Center (CVC) at the Universitat Autonoma
// de Barcelona (UAB).
//
// This work is licensed under the terms of the MIT license.
// For a copy, see <https://opensource.org/licenses/MIT>.

#pragma once
#include <string>
#include <utility>
#include <vector>
#include <iostream>
using std::string;
using std::wstring;
#include "LidarDescription.generated.h"

USTRUCT()
struct CARLA_API FLidarDescription
{
  GENERATED_BODY()
  
  UPROPERTY(EditAnywhere)
  FString LidarType = TEXT("default"); //lidar type(default,livox,Surround,Solid_state)

  UPROPERTY(EditAnywhere)
  FString NAME = TEXT("default"); //lidar name(modify int to string)
  /// Number of lasers.
  UPROPERTY(EditAnywhere)
  uint32 Channels = 32u;

  /// Measure distance in centimeters.
  UPROPERTY(EditAnywhere)
  float Range = 1000.0f;

  /// Points generated by all lasers per second.
  UPROPERTY(EditAnywhere)
  uint32 PointsPerSecond = 500000u;

  /// Lidar rotation frequency.
  UPROPERTY(EditAnywhere)
  float RotationFrequency = 20.0f;

  /// Upper laser angle, counts from horizontal, positive values means above
  /// horizontal line.
  UPROPERTY(EditAnywhere)
  float UpperFovLimit = 10.0f;

  /// Lower laser angle, counts from horizontal, negative values means under
  /// horizontal line.
  UPROPERTY(EditAnywhere)
  float LowerFovLimit = -30.0f;
  
  /// Horizontal field of view
  UPROPERTY(EditAnywhere)
  float HorizontalFov = 360.0f;

  /// Attenuation Rate in the atmosphere in m^-1.
  UPROPERTY(EditAnywhere)
  float AtmospAttenRate = 0.004f;

  /// Random seed for the noise/dropoff used by this sensor.
  UPROPERTY(EditAnywhere)
  int RandomSeed = 0;

  /// General drop off rate.
  UPROPERTY(EditAnywhere)
  float DropOffGenRate = 0.45f;

  /// General drop off rate.
  UPROPERTY(EditAnywhere)
  float DropOffIntensityLimit = 0.8f;

  /// General drop off rate.
  UPROPERTY(EditAnywhere)
  float DropOffAtZeroIntensity = 0.4f;

  /// Wether to show debug points of laser hits in simulator.
  UPROPERTY(EditAnywhere)
  bool ShowDebugPoints = false;

  UPROPERTY(EditAnywhere)
  float NoiseStdDev = 0.0f;

  //enable lidar ghost characters
  UPROPERTY(EditAnywhere)
  bool EnableGhost = false;

  std::vector<float> vfov;

  std::vector<float> hfov;


  std::vector<std::vector<float>> sub_vfov;

  std::vector<std::vector<float>> sub_hfov;  

  int pointnums=0;

  float Decay = 0.0f; //Point cloud density control parameter in liovx
  int LivoxSize = 0;
  std::vector<std::vector<float>> livox_csv_info; //save the csv data
  int LivoxCount = 0; //record the livox_csv_info index count
  float LivoxTimestamp = 0.0f;
  int Livox_loop_count = 0;
};
